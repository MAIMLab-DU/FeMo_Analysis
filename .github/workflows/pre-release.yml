name: Tag and Release on Version Change

on:
  push:
    paths:
      - 'femo/**'
      - 'aws_sagemaker/**'
      - 'configs/*.yaml'
    branches:
      - dev

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Extract version
        id: get_version
        run: |
          # Extract the __version__ variable from femo/__init__.py
          version=$(grep '^__version__' femo/__init__.py | cut -d '"' -f 2)
          echo "Version found: $version"
          echo "version=$version" >> $GITHUB_ENV
      
      - name: Check and increment pre-release tag
        id: check_prerelease
        run: |
          # Get the latest pre-release tags
          latest_rc=$(git tag -l "${{ env.version }}rc*" | sort -V | tail -n 1)
          if [ -z "$latest_rc" ]; then
            n=1
          else
            n=$(echo "$latest_rc" | grep -oE '[0-9]+$')
            n=$((n + 1))
          fi
          rc_version="${{ env.version }}rc$n"
          echo "pre-release version to tag: $rc_version"
          echo "version=$rc_version" >> $GITHUB_ENV

      - name: Check for existing tag
        id: check_tag
        run: |
          if git tag -l "v${{ env.version }}" | grep "v${{ env.version }}"; then
            echo "Tag v${{ env.version }} already exists."
            echo "tag_exists=true" >> $GITHUB_ENV
          else
            echo "tag_exists=false" >> $GITHUB_ENV
          fi

      - name: Create Git tag and push
        if: env.tag_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag "v${{ env.version }}"
          git push origin "v${{ env.version }}"

      - name: Create GitHub Release
        if: env.tag_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ env.version }}" --title "v${{ env.version }}" --notes "Automated pre-release for version v${{ env.version }}" --prerelease
